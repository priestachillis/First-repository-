'''
This app is a python todo app. 
Primary function is keeping track of tasks by adding, deleting and viewing tasks.
GUI is made with Tkinter
'''


from tkinter import *
from tkinter import ttk


'''
Geometry or GUI managers are use to specify the relative positioning of widgets within their container:
    pack()
    place()
Widgets:
    Label
    Button
    Listbox
'''

class TDA:
    def __init__(self, root):
        self.root = root
        self.root.title('TDA')
        self.root.geometry('658x410+300+150')
        self.root.resizable(False, False)
        self.create_widgets()


    def create_widgets(self):
            
        # Title label widget
        self.title_label = Label(
            self.root, 
            text='To-Do-App', 
            font='ariel, 25 bold', 
            width=10, 
            bd=5, 
            bg='green', 
            fg='white'
        )
        # The packer is one of Tk's geometry management mechanisms. 
        self.title_label.pack(side=TOP, fill=BOTH)

        # Add task label 
        self.add_task_label = Label(
            self.root, 
            text='Add task', 
            font='ariel, 18 bold', 
            width=10, 
            bd=5, 
            bg='green', 
            fg='white'
        )
        # place is one of the geometry managers
        self.add_task_label.place(x=35, y=54)

        # view tasks label
        self.view_tasks_label = Label(
            self.root, 
            text='View Tasks', 
            font='ariel, 18 bold', 
            width=10, 
            bd=5, 
            bg='green', 
            fg='white'
        )
        self.view_tasks_label.place(x=400, y=54)

        # task listbox widget
        self.main_text = Listbox(
            self.root,
            height = 10,
            width = 24,
            bd = 5,
            font = 'ariel, 20 italic bold'
        )
        
        self.main_text.place(x=280, y=100)

        # Input box
        self.text = Text(
            self.root, 
            bd=5, 
            height=2, 
            width=30, 
            font='ariel, 10 bold'
        )
        self.text.place(x=20, y=120)
       

        # ////// Functions //////

        # add task function
        def add_task(self):
            content = self.text.get(1.0, END)
            self.main_text.insert(END, content)

            # save the textbox data in a file
            with open('data.txt', 'a') as file:
                file.write(content)
                file.seek(0)
                file.close()
            self.text.delete(1.0, END)

        # delete function
        def delete_task(self):
            delete_ = self.main_text.curselection()
            look = self.main_text.get(delete_)

            try:
                # deletes the item from the text file.
                with open('data.txt', 'r+') as f:
                    new_f = f.readlines()
                    f.seek(0)
                    for line in new_f:
                        item = str(look)
                        if item not in line:
                            f.write(line)
                    f.truncate()

                self.main_text.delete(delete_) #deletes the item from the listbox
            except FileNotFoundError:
                print('File not found in current directory.')
            except Exception as e:
                print('Error loading file.:', e)
                
        try:
            # read the file after deleting items
            with open('data.txt', 'r') as file:
                read = file.readlines()
                for i in read:
                    ready = i.split()
                    self.main_text.insert(END, ready)
                file.close()
        except FileNotFoundError:
                print('File not found in current directory.')
        except Exception as e:
            print('Error loading file.:', e)


     # add button widget
        self.add_button = Button(
            self.root,
            text = 'Add',
            font = 'serif 20 bold italic',
            width = 10,
            bg = 'green',
            fg = 'white',
            cursor = 'hand2',
            relief = 'raised',
            command = add_task
        )
        self.add_button.place(x=30, y=180)

        # delete button
        self.delete_button = Button(
            self.root,
            text = 'Delete',
            font = 'serif 20 bold italic',
            width = 10,
            bg = 'green',
            fg = 'white',
            cursor = 'hand2',
            relief = 'raised',
            command = delete_task
        )
        self.delete_button.place(x=30, y=280)
        

# The main function that runs the program
def main():
    root = Tk() #initialize Tk and create a root window.
    TDA(root)
    root.mainloop() #responds to the user input until the program is terminated


if __name__ == '__main__':
    main()
